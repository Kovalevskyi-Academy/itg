timeout: 150s

options:
  dynamic_substitutions: true
  substitution_option: 'ALLOW_LOOSE'

substitutions:
  _REGION: 'europe-docker.pkg.dev'
  _ARTIFACT_FOLDER: 'gs://prod-rest_cloudbuild/api-rest'
  # $REPO_NAME means GitHub's repo name. It will be container name
  # $SHORT_SHA is a part of hash of commit. It will be container tag.
  _COMMIT_TAG: '${_REGION}/${PROJECT_ID}/api-rest/${REPO_NAME}:${SHORT_SHA}'
  _LATEST_TAG: '${_REGION}/${PROJECT_ID}/api-rest/${REPO_NAME}:latest'

steps:


  # Валидация кода
  - name: 'maven:3.8.4-eclipse-temurin-17-alpine'
    entrypoint: 'mvn'
    args: [ 'validate' ]
    dir: 'api'
  # Unit тесты
  - name: 'maven:3.8.4-eclipse-temurin-17-alpine'
    entrypoint: 'mvn'
    args: [ 'test' ]
    dir: 'api'
  # Собираем джарник.
  - name: 'maven:3.8.4-eclipse-temurin-17-alpine'
    entrypoint: 'mvn'
    args: ['package', '-Dmaven.test.skip=true']
    dir: 'api'
  # Засовываем джарник в хранилище
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
    entrypoint: 'gsutil'
    args: ['cp', 'target/a*.jar', '${_ARTIFACT_FOLDER}/a*.jar']
    dir: 'api'

  # Распаковываем джарник. Это позволит лучше использовать слои контейнера.
  - name: 'maven:3.8.4-eclipse-temurin-17-alpine'
    entrypoint: 'bash'
    args: ['-c', 'mkdir -p target/dependency && (cd target/dependency; jar -xfv ../*.jar) && echo "jar unpack success"']
    dir: 'api'
  # Пулим старый контейнер, если он есть.
  - name: 'docker:20.10.12-alpine3.15'
    entrypoint: 'sh'
    args: ['-c', 'docker pull ${_LATEST_TAG} || exit 0']
    dir: 'api'
  # Билдим контейнер используя кэш спуленного ранее контейнера,
  # на основе указанного докерфайла.
  - name: 'docker:20.10.12-alpine3.15'
    args: ['build',
           '-t', '${_COMMIT_TAG}',
           '-t', '${_LATEST_TAG}',
           '--cache-from', '${_LATEST_TAG}',
           '-f', 'api.dockerfile',
           '.']
    dir: 'api'



images:
  - '${_COMMIT_TAG}'
  - '${_LATEST_TAG}'
